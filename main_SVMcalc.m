function main_SVMcalc(directory_Training, directory_Trial, EpochCount_Train, EpochCount_Trial, EpochLength, savePNG)
%  
% :-:-:-:-:-:-:-:-:-: Up to date INFO :-:-:-:-:-:-:-:-:  
%  
% (27/Feb/2016) Caution! EpochLength value should be 0.2 so far because of the duration problem.  
% (27/Feb/2016) Caution! This classifier uses the libsvm library on MATLAB version so you  
% have to install them from official web pages to use this patch. Please  
% refer to the following link about libsvm!  
%  
% https://www.csie.ntu.edu.tw/~cjlin/libsvm/  
%  
% :-:-:-:-:-:-:-:-:-: Instruction :-:-:-:-:-:-:-:-:-:  
%  
% main_LDAcalc(ARG_1(char), ARG_2(char), ARG_3(double), ARG_4(double), ARG_5(double), ARG_6(double));  
%  
% === Input ===  
%  
% ARG_1 directory_Training(char): File directory location which has training csv files generated by OpenViBE  
% ARG_2 directory_Trial(char): File directory location which has trial csv files generated by OpenViBE  
% ARG_3 EpochCount_Train(double): Epoch value for signal to train classifier  
% ARG_4 EpochCount_Trial(double): Epoch value for signal to test classifier  
% ARG_5 EpochAverage(double): Duration length (seconds) after the stimulus onset   
% ARG_6 savePNG(double): If you want to save the result of the graph, this value should be set to 1, othewise 0  
%  
% === Output ===  
%  
% Figure: Probability of each duration versus each targets (Grid)  
%  
% === Example ===  
%  
% MATLAB > main_SVMcalc('../User/DirectoryName/Target', '../User/DirectoryName/Trial', 10, 1, 0.2, 0);  
% MATLAB > main_SVMcalc('../User/DirectoryName/Target', '../User/DirectoryName/Trial', 5, 5, 0.2, 0);  
%  
% :-:-:-:-: (C) Takumi Kodama, University of Tsukuba, Japan :-:-:-:-:  

[ProbP300_2cls, ProbP300_4cls] = SVMcalc_P300(directory_Training, directory_Trial, EpochCount_Train, EpochCount_Trial, EpochLength);

figure
for i = 1:4
    graph(i) = subplot(2,2,i);
    title(graph(i), strcat('Discriminant Score Duration', num2str(i)));
    ProbAll = vertcat(ProbP300_4cls(i,:), ProbP300_2cls(i,:));
    DepictMatrix(ProbAll, {'Target1','Target2','Target3','Target4'}, {'P300Prob-4cls', 'P300Prob-2cls'});

end

if(savePNG == 1)
    filename_Prob = strcat(directory_Trial, '/_ResultP300Prob(SVM).png');
    set(gcf,'Position', [0 0 1920 1080], 'PaperPositionMode', 'auto')
    print(filename_Prob,'-dpng','-r0')
end

end